#!/bin/bash

# we need gettext (is loaded in ssft.sh or cloned...)
if [ -f /usr/bin/gettext.sh ]; then
	. /usr/bin/gettext.sh || exit 1
else
	exit 1
fi
#---------------------------------------------------------------------
# we need root rights
#---------------------------------------------------------------------
if [ "$(id -u)" -ne 0 ]; then
	[ -x "$(which su-to-root)" ] && exec su-to-root -X -c "$0" "$@"
	printf "ERROR: $0 needs root capabilities, please start it as root\n\n" >&2
	exit 1
fi

TEXTDOMAIN="capi-isdnconf"
export TEXTDOMAIN
TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAINDIR


SSFTSH="$(which ssft.sh)"			|| SSFTSH="/usr/bin/ssft.sh"
# initialize ssft
. "$SSFTSH"
[ -n "$SSFT_FRONTEND" ] ||  SSFT_FRONTEND="$(ssft_choose_frontend)"


function inputbox {
	# inputbox title text width [init]
	SSFT_DEFAULT="$3"
	ssft_read_string "$1" "$2"
	unset SSFT_DEFAULT
	[ -n "$SSFT_RESULT" ] && printf "$SSFT_RESULT\n"
}

function msgbox {
	# msgbox title text width
	ssft_display_message "$1" "$2"
}

function yesno {
	# yesno title text width
	ssft_yesno "$1" "$2" && printf "0\n" || printf "1\n"
}

#main
TITLE="$(gettext "CAPI Configuration for ISDN")"
PROVIDER="$(inputbox "$TITLE" "$(gettext "ISDN provider")" capi-isdn)"
if [ "$PROVIDER" = "" ]; then
	msgbox "$TITLE" "$(gettext "Error: bad provider name")"
	exit 10
fi

NUMBER="$(inputbox "$TITLE" "$(gettext "ISDN number")")"
if [ "$NUMBER" = "" ]; then
	msgbox "$TITLE" "$(gettext "Error: bad number")"
	exit 20
fi

USERNAME="$(inputbox "$TITLE" "$(gettext "ISDN username")")"
if [ "$USERNAME" = "" ]; then
	msgbox "$TITLE" "$(gettext "Error: bad username")"
	exit 30
fi

PASSWORD="$(inputbox "$TITLE" "$(gettext "ISDN password")")"
if [ "$PASSWORD" = "" ]; then
	msgbox "$TITLE" "$(gettext "Error: bad password")"
	exit 40
fi

MSN="$(inputbox "$TITLE" "$(gettext "ISDN outgoing MSN")")"
if [ "$MSN" = "" ]; then
	msgbox "$TITLE" "$(gettext "Error: bad MSN")"
	exit 50
fi

mkdir -p /etc/ppp/peers/
rm -rf "/etc/ppp/peers/$PROVIDER"

cat <<EOF >"/etc/ppp/peers/$PROVIDER"
sync
noauth
user "$USERNAME"
hide-password
defaultroute
plugin capiplugin.so
msn "$MSN"
number "$NUMBER"
protocol hdlc
/dev/null
usepeerdns
EOF

chmod 640 "/etc/ppp/peers/$PROVIDER"
chown root:dip "/etc/ppp/peers/$PROVIDER"

for AUTH in chap pap; do
	[ -w /etc/ppp/$AUTH-secrets ] && perl -pi -e "s|^[\s]*\"$USERNAME\".*[\n]?$||" /etc/ppp/$AUTH-secrets
	cat <<EOF >>/etc/ppp/$AUTH-secrets
"$USERNAME" * "$PASSWORD"
EOF

	chmod 600 "/etc/ppp/$AUTH-secrets"
	chown root:root "/etc/ppp/$AUTH-secrets"
done

if [ ! -e /etc/debian_version ]; then
	[ -f /etc/resolv.conf ] && cp /etc/resolv.conf /etc/resolv.conf.1st
	rm -f /etc/resolv.conf
	ln -s ppp/resolv.conf /etc/resolv.conf
fi

CONNECT=$(yesno "$TITLE" "$(gettext "Connect now?")")
[ "$CONNECT" = "1" ] && exit 50

PPPD=/usr/sbin/pppd
killall pppd 2>/dev/null

"$PPPD" call "$PROVIDER"

